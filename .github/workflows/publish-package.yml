name: Publish NPM packages

on:
  workflow_dispatch:
  release:
    types: [published]
  pull_request:
    branches:
      - main
    paths:
      - 'typescript/packages/h402/**'    
      - 'typescript/packages/h402-express/**'
      - 'typescript/packages/h402-fetch/**'
      - 'typescript/packages/h402-axios/**'
      - 'typescript/packages/h402-next/**'
      - 'typescript/packages/h402-proxy/**'
  push:
    paths:
      - 'typescript/packages/h402/**'
      - 'typescript/packages/h402-express/**'
      - 'typescript/packages/h402-fetch/**'
      - 'typescript/packages/h402-axios/**'
      - 'typescript/packages/h402-next/**'
      - 'typescript/packages/h402-proxy/**'
jobs:
  build-h402:
    uses: ./.github/workflows/build-library.yml
    with:
      name: h402

  get-libraries:
    runs-on:
      group: arc-runners

    outputs:
      matrix: ${{ steps.output.outputs.matrix }}

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - id: output
        run: |
          #!/bin/bash
          LIBRARIES=`jq -c . .github/workflows/libraries.jsonl`
          echo "matrix=$LIBRARIES" >> "$GITHUB_OUTPUT"

  build-libraries:
    needs: [ build-h402, get-libraries ]
    strategy:
      matrix:
       package: ${{ fromJSON(needs.get-libraries.outputs.matrix) }}

    uses: ./.github/workflows/build-library.yml
    with:
      name: ${{ matrix.package }}
      wants-h402: true

  build-h402-proxy:
    needs: [get-libraries, build-libraries]

    uses: ./.github/workflows/build-package.yml
    with:
      name: h402-proxy
      libraries: ${{ needs.get-libraries.outputs.matrix }}

  publish:
    runs-on:
      group: arc-runners

    needs: [ get-libraries, build-libraries, build-h402-proxy ]
    if: ${{ startsWith(github.ref, 'refs/tags/') }}

    strategy:
      matrix:
        package:
          - h402
          - h402-express
          - h402-fetch
          - h402-axios
          - h402-next
          - h402-proxy

    permissions:
      packages: write
    
    steps:
      - run: |
          #!/bin/bash -ex
          sudo apt-get update
          sudo apt-get install -y gh

      - uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - uses: actions/download-artifact@v4
        with:
          name: ${{ matrix.package }}-dist
          path: typescript/packages/${{ matrix.package }}/dist

      - uses: actions/download-artifact@v4
        with:
          name: ${{ matrix.package }}-node_modules
          path: typescript/packages/${{ matrix.package }}/node_modules

      - name: install libraries 
        if: ${{ matrix.package != 'h402' }}
        run: |
          #!/bin/bash -ex

          echo '${{ needs.get-libraries.outputs.matrix }}' | \
          jq -r '. - ["${{ matrix.package }}"] | .[]' | \
          while read -r library; do
            gh run download \
              ${{ github.run_id }} \
              -n "${library}-dist" \
              --dir "typescript/packages/${library}/dist"

            gh run download \
              ${{ github.run_id }} \
              -n "${library}-node_modules" \
              --dir "typescript/packages/${library}/node_modules"
          done
        env:
          GH_TOKEN: ${{ github.token }}

      - uses: actions/download-artifact@v4
        if: ${{ matrix.package != 'h402' }}
        with:
          name: h402-dist
          path: typescript/packages/h402/dist

      - uses: actions/download-artifact@v4
        if: ${{ matrix.package != 'h402' }}
        with:
          name: h402-node_modules
          path: typescript/packages/h402/node_modules

      - uses: pnpm/action-setup@v4
        with:
          version: 10

      - uses: actions/setup-node@v4
        with:
          node-version-file: ".nvmrc"
          cache: "pnpm"

      - name: Publish GitHub
        run: |
          npm config set @bit-gpt:registry https://npm.pkg.github.com -L project
          echo '//npm.pkg.github.com/:_authToken=${NODE_AUTH_TOKEN}' >> .npmrc 
          pnpm publish --filter '@bit-gpt/${{ matrix.package }}' --no-git-checks
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Publish NPM
        run: |
          npm config set @bit-gpt:registry https://registry.npmjs.org -L project
          echo '//registry.npmjs.org/:_authToken=${NODE_AUTH_TOKEN}' >> .npmrc
          pnpm publish --filter '@bit-gpt/${{ matrix.package }}' --no-git-checks --access=public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPMJS_TOKEN }}